#!/bin/bash

# MatCarv AWS Infrastructure Deploy Script
# Este script facilita o deploy da infraestrutura

set -e

echo "üöÄ MatCarv AWS Infrastructure Deploy"
echo "===================================="

# Verificar se o Terraform est√° instalado
if ! command -v terraform &> /dev/null; then
    echo "‚ùå Terraform n√£o est√° instalado. Por favor, instale o Terraform primeiro."
    exit 1
fi

# Verificar se o AWS CLI est√° instalado
if ! command -v aws &> /dev/null; then
    echo "‚ùå AWS CLI n√£o est√° instalado. Por favor, instale o AWS CLI primeiro."
    exit 1
fi

# Verificar se o profile matcarv existe
if ! aws configure list-profiles | grep -q "matcarv"; then
    echo "‚ùå Profile AWS 'matcarv' n√£o encontrado. Configure o profile primeiro:"
    echo "   aws configure --profile matcarv"
    exit 1
fi

# Verificar se o arquivo terraform.tfvars existe
if [ ! -f "terraform.tfvars" ]; then
    echo "üìù Arquivo terraform.tfvars n√£o encontrado. Copiando do exemplo..."
    cp terraform.tfvars.example terraform.tfvars
    echo "‚úÖ Arquivo terraform.tfvars criado. Edite-o conforme necess√°rio."
    echo "   Pressione Enter para continuar ap√≥s editar o arquivo..."
    read
fi

echo "üîß Inicializando Terraform..."
terraform init

echo "‚úÖ Validando configura√ß√£o..."
terraform validate

echo "üìã Gerando plano de execu√ß√£o..."
terraform plan

echo ""
echo "ü§î Deseja aplicar a infraestrutura? (y/N)"
read -r response

if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
    echo "üöÄ Aplicando infraestrutura..."
    terraform apply
    
    echo ""
    echo "üéâ Deploy conclu√≠do com sucesso!"
    echo "üìä Para ver os outputs:"
    echo "   terraform output"
    echo ""
    echo "üåê Sua aplica√ß√£o estar√° dispon√≠vel em:"
    terraform output -raw application_url_https 2>/dev/null || echo "   https://app.matcarv.com.br"
    echo "   (HTTP ser√° redirecionado automaticamente para HTTPS)"
else
    echo "‚ùå Deploy cancelado."
fi
